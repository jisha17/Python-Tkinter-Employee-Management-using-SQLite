import sqlite3
from tkinter import*
from tkinter import messagebox


root=Tk()                               #Main window 
f=Frame(root)
frame1=Frame(root)
frame2=Frame(root)
frame3=Frame(root)
root.title("Employee Management System")
root.geometry("750x550")
root.configure(background="Black")

id_no=IntVar()                          #Declaration of all variables
firstname=StringVar()                   
lastname=StringVar()
age=IntVar()
address=StringVar()
experience=DoubleVar()
designation=StringVar()
salary=DoubleVar()

def add_data():                         #Enter the parameters/values to be added
    clear_all()
    try:
        emp_first_name=Label(frame1,text="Enter first name of the employee: ",bg="red",fg="Blue",anchor=W)
        emp_first_name.grid(row=1,column=1,padx=10,pady=10)
        e1=Entry(frame1,textvariable=firstname)
        e1.grid(row=1,column=2,padx=10,pady=10)
        e1.focus()
        emp_last_name=Label(frame1,text="Enter last name of the employee: ",bg="red",fg="Blue",anchor=W)
        emp_last_name.grid(row=2,column=1,padx=10,pady=10)
        e2=Entry(frame1,textvariable=lastname)
        e2.grid(row=2,column=2,padx=10,pady=10)
        emp_id=Label(frame1,text="Enter ID of the employee: ",bg="red",fg="Blue",anchor=W)
        emp_id.grid(row=3,column=1,padx=10,pady=10)
        e3=Entry(frame1,textvariable=id_no)
        e3.grid(row=3,column=2,padx=10,pady=10)
        emp_age=Label(frame1,text="Enter age of the employee: ",bg="red",fg="Blue",anchor=W)
        emp_age.grid(row=4,column=1,padx=10,pady=10)
        e4=Entry(frame1,textvariable=age)
        e4.grid(row=4,column=2,padx=10,pady=10)
        emp_address=Label(frame1,text="Enter the address of employee: ",bg="red",fg="Blue",anchor=W)
        emp_address.grid(row=5,column=1,padx=10,pady=10)
        address.set("Select Option")
        e5=OptionMenu(frame1,address,"Select Option","Mumbai","Thane","Navi Mumbai")
        e5.grid(row=5,column=2,padx=10,pady=10)
        emp_dept=Label(frame1,text="Enter the experience of employee: ",bg="red",fg="Blue",anchor=W)
        emp_dept.grid(row=6,column=1,padx=10,pady=10)
        e6=Entry(frame1,textvariable=experience)
        e6.grid(row=6,column=2,padx=10,pady=10)
        emp_desig=Label(frame1,text="Enter designation of Employee: ",bg="red",fg="Blue",anchor=W)
        emp_desig.grid(row=7,column=1,padx=10,pady=10)
        designation.set("Select Option")
        e7=OptionMenu(frame1,designation,"Select Option","Manager","Asst Manager","Project Manager","Team Lead","Senior Tester", 
                  "Junior Tester","Senior Developer","Junior Developer","Intern")
        e7.grid(row=7,column=2,padx=10,pady=10)   
        emp_sal=Label(frame1,text="Enter salary of Employee: ",bg="red",fg="Blue",anchor=W)
        emp_sal.grid(row=8,column=1,padx=10,pady=10)
        e8=Entry(frame1,textvariable=salary)
        e8.grid(row=8,column=2,padx=10,pady=10)   
        button4=Button(frame1,text="Add entries",command=addto_database)
        button4.grid(row=9,column=2,padx=10,pady=10,ipadx=10)
    
        frame1.configure(background="Red")
        frame1.pack()
    except BaseException:
        messagebox.showerror("Error", "Invalid data")
    
    
def addto_database():                         #Add all entered parameters to the database
    f=firstname.get()
    f1=f.lower()
    l=lastname.get()
    l1=l.lower()
    i=int(id_no.get())
    ag=int(age.get())
    addr=address.get()
    exp=float(experience.get())
    desg=designation.get()
    sal=float(salary.get())
    try:
        if addr=="Select Option" or desg=="Select Option":
            messagebox.showerror("Error", "Please Select an option")
        elif f1==None or l1==None or i==None or ag==None or exp==None or sal==None:
            messagebox.showerror("Error", "Please enter all data")
        elif f and l:
            con=sqlite3.connect('Company_Manager.db')
            cursor=con.execute("Select ID,first_name,last_name,age,address,experience_in_yrs,designation,salary from employee_info \
                    where (first_name=? and last_name=?) or (ID=?)",(f1,l1,i))
            data_exist=cursor.fetchall()
            if data_exist:
                messagebox.showerror("Error", "Employee already exist")
                con.rollback()
            else:
                con=sqlite3.connect('Company_Manager.db')        
                con.execute("""Insert into employee_info(ID,first_name,last_name,age,address,experience_in_yrs,designation,\
                salary) values (?,?,?,?,?,?,?,?);""",(i,f1,l1,ag,addr,exp,desg,sal))
                con.commit()
            messagebox.showinfo("Done","Successfully added the employee")
        elif i:
            con=sqlite3.connect('Company_Manager.db')
            cursor=con.execute("Select ID,first_name,last_name,age,address,experience_in_yrs,designation,salary from employee_info \
                    where (first_name=? and last_name=?) or (ID=?)",(f1,l1,i))
            data_exist=cursor.fetchall()
            if data_exist:
                messagebox.showerror("Error", "ID already exist")
                con.rollback()
        else:
            con=sqlite3.connect('Company_Manager.db')        
            con.execute("""Insert into employee_info(ID,first_name,last_name,age,address,experience_in_yrs,designation,salary)\
                values (?,?,?,?,?,?,?,?);""",(i,f1,l1,ag,addr,exp,desg,sal))
            con.commit()
            messagebox.showinfo("Done","Successfully added the employee")
    except BaseException:
        messagebox.showerror("Error", "ID already exist")
        con.rollback()
    finally:
        con.close()

def remove_emp():                #for taking user input to remove enteries
    clear_all()
    emp_first_name=Label(frame2,text="Enter first name of the employee",bg="red",fg="Blue")
    emp_first_name.grid(row=1,column=1,padx=10,pady=10)
    e9=Entry(frame2,textvariable=firstname)
    e9.grid(row=1,column=2,padx=10,pady=10)
    e9.focus()
    emp_last_name=Label(frame2,text="Enter last name of the employee",bg="red",fg="Blue")
    emp_last_name.grid(row=2,column=1,padx=10,pady=10)
    e10=Entry(frame2,textvariable=lastname)
    e10.grid(row=2,column=2,padx=10,pady=10)
    label3=Label(frame2,text="OR",bg="red",fg="Blue")
    label3.grid(row=3,column=1)
    emp_id=Label(frame2,text="Enter ID of the employee",bg="red",fg="Blue")
    emp_id.grid(row=4,column=1,padx=10,pady=10)
    e11=Entry(frame2,textvariable=id_no)
    e11.grid(row=4,column=2,padx=10,pady=10)
    remove_button=Button(frame2,text="Click to remove",command=removefrom_database)
    remove_button.grid(row=5,column=2,padx=10,pady=10)
    
    frame2.configure(background="Red")
    frame2.pack()
    
def removefrom_database():          #for removing data from database
    try:
        f=firstname.get()
        f1=f.lower()
        l=lastname.get()
        l1=l.lower()
        i=int(id_no.get())
        if f and l:
            con=sqlite3.connect('Company_Manager.db')
            cursor=con.execute("Select ID,first_name,last_name,age,address,experience_in_yrs,designation,salary from employee_info \
                    where (first_name=? and last_name=?) or (ID=?)",(f1,l1,i))
            data_exist=cursor.fetchall()
            if data_exist:
                con.execute("Delete from employee_info where first_name=? and last_name=?",(f1,l1))
                con.commit()
                messagebox.showinfo("Done","Successfully removed the employee")
            else:
                messagebox.showerror("Error", "Data does not exist")
        elif i:
            con=sqlite3.connect('Company_Manager.db')
            cursor=con.execute("Select ID,first_name,last_name,age,address,experience_in_yrs,designation,salary from employee_info \
                    where (first_name=? and last_name=?) or (ID=?)",(f1,l1,i))
            data_exist=cursor.fetchall()
            if data_exist:
                con.execute("Delete from employee_info where ID=?",(i,))
                con.commit()
                messagebox.showinfo("Done","Successfully removed the employee")
            else:
                messagebox.showerror("Error", "Data does not exist")
        else: 
            messagebox.showerror("Error", "Please enter the required data")
    except BaseException:
        messagebox.showerror("Error", "Something went wrong")
        con.rollback()      
    finally:
        con.close()

def search_emp():     #can implement search by 1st name,last name or id
    clear_all()
    emp_first_name=Label(frame3,text="Enter first name of the employee",bg="red",fg="Blue")   #to take user input to seach
    emp_first_name.grid(row=1,column=1,padx=10,pady=10)
    e12=Entry(frame3,textvariable=firstname)
    e12.grid(row=1,column=2,padx=10,pady=10)
    e12.focus()
    emp_last_name=Label(frame3,text="Enter last name of the employee",bg="red",fg="Blue")
    emp_last_name.grid(row=2,column=1,padx=10,pady=10)
    e13=Entry(frame3,textvariable=lastname)
    e13.grid(row=2,column=2,padx=10,pady=10)
    label4=Label(frame3,text="OR",bg="red",fg="Blue")
    label4.grid(row=3,column=1)
    emp_id=Label(frame3,text="Enter ID of the employee",bg="red",fg="Blue")
    emp_id.grid(row=4,column=1,padx=10,pady=10)
    e14=Entry(frame3,textvariable=id_no)
    e14.grid(row=4,column=2,padx=10,pady=10)
    search_button=Button(frame3,text="Click to search",command=searchin_database)
    search_button.grid(row=5,column=2,padx=10,pady=10)    
    frame3.configure(background="Red")
    frame3.pack(ipady=10,ipadx=10)
    
    
def searchin_database():
    try:
        f=firstname.get()
        f1=f.lower()
        l=lastname.get()
        l1=l.lower()
        i=int(id_no.get())
        if f1 and l1:
            con=sqlite3.connect('Company_Manager.db')
            cursor=con.execute("Select ID,first_name,last_name,age,address,experience_in_yrs,designation,salary from employee_info \
                    where (first_name=? and last_name=?) or (ID=?)",(f1,l1,i))
            data_exist=cursor.fetchall()
            if data_exist:
                for row in data_exist:
                    text_insert0='{0}:{1}'.format("ID  ",row[0])
                    text_insert1='{0}:{1}'.format("First Name  ",row[1])
                    text_insert2='{0}:{1}'.format("Last Name  ",row[2])
                    text_insert3='{0}:{1}'.format("Age  ",row[3])
                    text_insert4='{0}:{1}'.format("Address  ",row[4])
                    text_insert5='{0}:{1}'.format("Experience  ",row[5])
                    text_insert6='{0}:{1}'.format("Designation  ",row[6])
                    text_insert7='{0}:{1}'.format("Salary  ",row[7])
                    Label5=Label(frame3,text="On the left is the infomartion:",bg="red",fg="Blue")
                    Label5.configure(width=25,anchor=W)
                    Label5.grid(row=9,column=1)
                    Label6=Label(frame3,text=text_insert0,background="White", fg="Black")
                    Label6.configure(width=20,anchor=W)
                    Label6.grid(row=7,column=2,padx=10)
                    Label7=Label(frame3,text=text_insert1,background="White", fg="Black")
                    Label7.configure(width=20,anchor=W)
                    Label7.grid(row=8,column=2)
                    Label8=Label(frame3,text=text_insert2,background="White", fg="Black")
                    Label8.configure(width=20,anchor=W)
                    Label8.grid(row=9,column=2)
                    Label9=Label(frame3,text=text_insert3,background="White", fg="Black")
                    Label9.configure(width=20,anchor=W)
                    Label9.grid(row=10,column=2)
                    Label10=Label(frame3,text=text_insert4,background="White", fg="Black")
                    Label10.configure(width=20,anchor=W)
                    Label10.grid(row=11,column=2)
                    Label11=Label(frame3,text=text_insert5,background="White", fg="Black")
                    Label11.configure(width=20,anchor=W)
                    Label11.grid(row=12,column=2)
                    Label12=Label(frame3,text=text_insert6,background="White", fg="Black")
                    Label12.configure(width=20,anchor=W)
                    Label12.grid(row=13,column=2)
                    Label13=Label(frame3,text=text_insert7,background="White", fg="Black")
                    Label13.configure(width=20,anchor=W)
                    Label13.grid(row=14,column=2)
            else:
                messagebox.showerror("Error", "Data does not exist")
        elif i:
            con=sqlite3.connect('Company_Manager.db')
            cursor=con.execute("Select ID,first_name,last_name,age,address,experience_in_yrs,designation,salary from employee_info \
                    where (first_name=? and last_name=?) or (ID=?)",(f1,l1,i))
            data_exist=cursor.fetchall()
            if data_exist:
                for row in data_exist:   
                    text_insert0='{0}:{1}'.format("ID  ",row[0])
                    text_insert1='{0}:{1}'.format("First Name  ",row[1])
                    text_insert2='{0}:{1}'.format("Last Name  ",row[2])
                    text_insert3='{0}:{1}'.format("Age  ",row[3])
                    text_insert4='{0}:{1}'.format("Address  ",row[4])
                    text_insert5='{0}:{1}'.format("Experience  ",row[5])
                    text_insert6='{0}:{1}'.format("Designation  ",row[6])
                    text_insert7='{0}:{1}'.format("Salary  ",row[7])
                    Label5=Label(frame3,text="On the left is the infomartion:",bg="red",fg="Blue")
                    Label5.configure(width=25,anchor=W)
                    Label5.grid(row=9,column=1)
                    Label6=Label(frame3,text=text_insert0,background="White", fg="Black")
                    Label6.configure(width=20,anchor=W)
                    Label6.grid(row=7,column=2,padx=10)
                    Label7=Label(frame3,text=text_insert1,background="White", fg="Black")
                    Label7.configure(width=20,anchor=W)
                    Label7.grid(row=8,column=2)
                    Label8=Label(frame3,text=text_insert2,background="White", fg="Black")
                    Label8.configure(width=20,anchor=W)
                    Label8.grid(row=9,column=2)
                    Label9=Label(frame3,text=text_insert3,background="White", fg="Black")
                    Label9.configure(width=20,anchor=W)
                    Label9.grid(row=10,column=2)
                    Label10=Label(frame3,text=text_insert4,background="White", fg="Black")
                    Label10.configure(width=20,anchor=W)
                    Label10.grid(row=11,column=2)
                    Label11=Label(frame3,text=text_insert5,background="White", fg="Black")
                    Label11.configure(width=20,anchor=W)
                    Label11.grid(row=12,column=2)
                    Label12=Label(frame3,text=text_insert6,background="White", fg="Black")
                    Label12.configure(width=20,anchor=W)
                    Label12.grid(row=13,column=2)
                    Label13=Label(frame3,text=text_insert7,background="White", fg="Black")
                    Label13.configure(width=20,anchor=W)
                    Label13.grid(row=14,column=2)
            else:
                messagebox.showerror("Error", "Data does not exist")
        else: 
            messagebox.showerror("Error", "Please enter the required data")
    except BaseException:
        messagebox.showerror("Error", "Invalid Data")
        con.rollback()      
    finally:
        con.close()
def clear_all():             #for clearing the entry widgets
    frame1.pack_forget()
    frame2.pack_forget()
    frame3.pack_forget()
    
    
#Main window buttons and labels

label1=Label(root,text="This is an employment management system where you can add employee,\n delete employee, seach for an employee and view for an employee")
label1.config(font=('Italic',16,'bold'), justify=CENTER, background="Orange",fg="Yellow", anchor="center")
label1.pack(fill=X)
label2=Label(f,text="Select an action: ",font=('bold',12), background="Black", fg="White")
label2.pack(side=LEFT,pady=10)
button1=Button(f,text="Add", background="Brown", fg="White", width=8,command=add_data)
button1.pack(side=LEFT,ipadx=20,pady=10)
button2=Button(f,text="Remove", background="Brown", fg="white", width=8, command=remove_emp)
button2.pack(side=LEFT,ipadx=20,pady=10)
button3=Button(f,text="Search", background="Brown", fg="White", width=8, command=search_emp)
button3.pack(side=LEFT,ipadx=20,pady=10)
button6=Button(f,text="Close", background="Brown", fg="White", width=8, command=root.destroy)
button6.pack(side=LEFT,ipadx=20,pady=10)
f.configure(background="Black")
f.pack()


root.mainloop()
